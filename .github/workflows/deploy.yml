name: deploy

on:
  pull_request:
    branches:
      - main
      - dev
      - temp
  push:
    branches:
      - main
      - dev
      - temp

jobs:
  check-profile:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Check spring.profile.active
        run: |
          profile=$(grep -E '^\s*active:\s*' src/main/resources/application.yml | awk '{print $2}')
          echo "Detected profile: $profile"
          if [ "$profile" != "prod" ]; then
            echo "wrong_profile=true" >> $GITHUB_ENV
          fi

      - name: Create a comment on PR if profile.active is wrong
        if: env.wrong_profile == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ❌ **Check 실패: profile.active 설정**
            `application.yml`의 `spring.profiles.active` 값을 `prod` 으로 변경 해주세요.

      - name: Fail the job if profile is wrong
        if: env.wrong_profile == 'true'
        run: |
          echo "Profile is not prod. Failing the job."
          exit 1


  docker-build-push:
    needs: check-profile
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Docker Hub login
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build & push to docker hub
        run: |
          docker build -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}
  

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-22.04
    if: github.event_name == 'push'
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOSTNAME }}
          password: ${{ secrets.SSH_PWD }}
          script: |
            docker pull ${{ secrets.DOCKER_REPO }}  
            cd artego-server
            echo "${{ secrets.SPRING_ENV }}" > .env
            docker run -d --name artego -p $APP_PORT_EXTERNAL:$APP_PORT_INTERNAL --env-file .env ${{ secrets.DOCKER_REPO }}
            docker image prune -f --filter "until=24h"
        env:
          APP_PORT_EXTERNAL: ${{ secrets.APP_PORT_EXTERNAL }}
          APP_PORT_INTERNAL: ${{ secrets.APP_PORT_INTERNAL }}